;; Task 4.1 -- Defining a Random Player
( defclass random-machine-player ( player ) 
  ( 
    ( name :initform 'random-machine ) 
  ) 
)

( defmethod make-move ( ( p random-machine-player ) ( s state ) &rest report &aux move )
  ( setf report ( car report ) )
  ( if report ( format t "Begin ~A move ...~%" ( player-name p ) ) )
  ( if report ( display s ) )
  ( setf move ( nth ( random ( length pm-list ) ) pm-list ) )
  ( if report ( format t "radomly selecting ~A for my move ~%" move ) )
  ( apply-move move s )  
)

( defun dobo-demo-4.1 ( &aux player state )
  ( set-pm-list )
  ( format t "Making a random machine player ...~%" )
  ( setf player ( make-instance 'random-machine-player ) )
  ( format t "Making a starting game state ...~%" )
  ( display player )
  ( setf state ( make-instance 'state ) )
  ( dotimes ( i 3 )
    ( display state )
    ( setf state ( make-move player state t ) )
    ( display state ) 
  )
)

