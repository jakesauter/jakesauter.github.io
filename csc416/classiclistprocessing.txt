[1]> (load "lp.l")
;; Loading file lp.l ...
;; Loaded file lp.l
T
[2]> (singleton-p ( list 'a ) )
T
[3]> (singleton-p (list 'a 'b ) )
NIL
[4]> (singleton-p (list 'a 'b 'c 'd 'e 'f 'g ) )
NIL
[5]> (trace rac )
;; Tracing function RAC.
(RAC)
[6]> (rac ( list 'a ) )
1. Trace: (RAC '(A))
1. Trace: RAC ==> A
A
[7]> (rac (list 'a 'b 'c 'd ) )
1. Trace: (RAC '(A B C D))
2. Trace: (RAC '(B C D))
3. Trace: (RAC '(C D))
4. Trace: (RAC '(D))
4. Trace: RAC ==> D
3. Trace: RAC ==> D
2. Trace: RAC ==> D
1. Trace: RAC ==> D
D
[8]> (trace rdc)
;; Tracing function RDC.
(RDC)
[9]> (rdc (list 'a))
1. Trace: (RDC '(A))
1. Trace: RDC ==> NIL
NIL
[10]> (rdc (list 'a 'b 'c 'd))
1. Trace: (RDC '(A B C D))
2. Trace: (RDC '(B C D))
3. Trace: (RDC '(C D))
4. Trace: (RDC '(D))
4. Trace: RDC ==> NIL
3. Trace: RDC ==> (C)
2. Trace: RDC ==> (B C)
1. Trace: RDC ==> (A B C)
(A B C)
[11]> (untrace rac rdc)
(RAC RDC)
[12]> (trace snoc)
;; Tracing function SNOC.
(SNOC)
[13]> (snoc 'blue () )
1. Trace: (SNOC 'BLUE 'NIL)
1. Trace: SNOC ==> (BLUE)
(BLUE)
[14]> ( snoc 'blue (list 'red ) )
(RED BLUE)
[15]> ( snoc 'blue (list 'purple 'indigo 'violet 'teal ) )
(PURPLE INDIGO VIOLET TEAL BLUE)
[16]> (trace snoc)
;; Tracing function SNOC.
(SNOC)
[17]> ( snoc 'blue (list 'red ) )
1. Trace: (SNOC 'BLUE '(RED))
2. Trace: (SNOC 'BLUE 'NIL)
2. Trace: SNOC ==> (BLUE)
1. Trace: SNOC ==> (RED BLUE)
(RED BLUE)
[18]> ( snoc 'blue (list 'purple 'indigo 'violet 'teal ) )
1. Trace: (SNOC 'BLUE '(PURPLE INDIGO VIOLET TEAL))
2. Trace: (SNOC 'BLUE '(INDIGO VIOLET TEAL))
3. Trace: (SNOC 'BLUE '(VIOLET TEAL))
4. Trace: (SNOC 'BLUE '(TEAL))
5. Trace: (SNOC 'BLUE 'NIL)
5. Trace: SNOC ==> (BLUE)
4. Trace: SNOC ==> (TEAL BLUE)
3. Trace: SNOC ==> (VIOLET TEAL BLUE)
2. Trace: SNOC ==> (INDIGO VIOLET TEAL BLUE)
1. Trace: SNOC ==> (PURPLE INDIGO VIOLET TEAL BLUE)
(PURPLE INDIGO VIOLET TEAL BLUE)
[19]> (untrace snoc)
(SNOC)
[20]> (trace palindrome-p )
;; Tracing function PALINDROME-P.
(PALINDROME-P)
[21]> ( palindrome-p () )
1. Trace: (PALINDROME-P 'NIL)
1. Trace: PALINDROME-P ==> T
T
[22]> ( palindrome-p '(palindrome) )
1. Trace: (PALINDROME-P '(PALINDROME))
1. Trace: PALINDROME-P ==> T
T
[23]> ( palindrome-p '(palindrome) )
1. Trace: (PALINDROME-P '(PALINDROME))
1. Trace: PALINDROME-P ==> T
T
[24]> (palindrome-p '(clos sloc))
1. Trace: (PALINDROME-P '(CLOS SLOC))
1. Trace: PALINDROME-P ==> NIL
NIL
[25]> (palindrome-p '(food drink food))
1. Trace: (PALINDROME-P '(FOOD DRINK FOOD))
2. Trace: (PALINDROME-P '(DRINK))
2. Trace: PALINDROME-P ==> T
1. Trace: PALINDROME-P ==> T
T
[26]> (palindrome-p '(1 2 3 4 5 4 3 2 1))
1. Trace: (PALINDROME-P '(1 2 3 4 5 4 3 2 1))
2. Trace: (PALINDROME-P '(2 3 4 5 4 3 2))
3. Trace: (PALINDROME-P '(3 4 5 4 3))
4. Trace: (PALINDROME-P '(4 5 4))
5. Trace: (PALINDROME-P '(5))
5. Trace: PALINDROME-P ==> T
4. Trace: PALINDROME-P ==> T
3. Trace: PALINDROME-P ==> T
2. Trace: PALINDROME-P ==> T
1. Trace: PALINDROME-P ==> T
T
[27]> (palindrome-p '(HEY HEY MY MY MY MY HEY HEY))
1. Trace: (PALINDROME-P '(HEY HEY MY MY MY MY HEY HEY))
2. Trace: (PALINDROME-P '(HEY MY MY MY MY HEY))
3. Trace: (PALINDROME-P '(MY MY MY MY))
4. Trace: (PALINDROME-P '(MY MY))
5. Trace: (PALINDROME-P 'NIL)
5. Trace: PALINDROME-P ==> T
4. Trace: PALINDROME-P ==> T
3. Trace: PALINDROME-P ==> T
2. Trace: PALINDROME-P ==> T
1. Trace: PALINDROME-P ==> T
T
[28]> (bye)
Bye.
